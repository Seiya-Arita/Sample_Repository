#!/bin/sh
. "/home/ec2-user/kyo/logger.sh"

# スクリプト自身のパスを取得（bashでも.でも動く）
script_path="$(realpath "${BASH_SOURCE[0]:-${0}}")"

log_exec "$script_path" "$@"

# ==============================================================================
# 作成テーブル名称  :事業資金有無                              | HN_INFO.T_NY03000D_WK1
# フェーズ          :事業資金有無
# サイクル          :日次
# 参照テーブル      :事業資金積数                              | HN_INFO.T_NY03001D_WK
# 変更履歴
# ------------------------------------------------------------------------------
# 2023-02-06        :新規作成                                  | Nagata
# ===============================================================================
#
#  ＳＱＬ実行
#

sqlcmd -S ${SQL_SERVER} -d ${SQL_DB} -U ${SQL_USER} -P ${SQL_PASS} -f ${CHARSET} -t 0 -e -w 254 -b -N o -Q "
DECLARE @ExitCode INT;
DECLARE @ErrorCode INT;
SET @ExitCode = 0;
SELECT GETDATE() AS [DATE];
SELECT @ErrorCode = @@ERROR;
IF @ErrorCode <> 0 GOTO ENDPT;
/* ****************************************************************** */
/* 事業資金有無 */
/* ****************************************************************** */
INSERT INTO ${INFO_DB}.[T_NY03000D_WK1]
SELECT
   MAX(A.[作成基準日])      AS [作成基準日],
   A.[店番]                 AS [店番],
   A.[ＣＩＦ番号]           AS [ＣＩＦ番号],
   ''                       AS [統合ＣＩＦ番号],
   ''                       AS [代表ＣＩＦフラグ],
   0                        AS [ＣＩＦ開設日],
   CASE WHEN SUM(A.[月中積数])>0 THEN '1' ELSE '0' END AS [事業資金貸出フラグ],
   '0'                      AS [住宅ローンフラグ],
   '0'                      AS [住公契約フラグ],
   0                        AS [預かり資産残高],
   '0'                      AS [給振フラグ],
   '0'                      AS [年金フラグ],
   0                        AS [公共料金自振数],
   0                        AS [ローン取引数],
   0                        AS [機能サービス数]
FROM (
  SELECT
     [作成基準日]             AS [作成基準日],
     [店番]                   AS [店番],
     [ＣＩＦ番号]             AS [ＣＩＦ番号],
     [月中積数]               AS [月中積数]
  FROM ${INFO_DB}.[T_NY03001D_WK]
  WHERE
    ( [科目] IN ('51','52','53','57') AND
      [法個人コード] NOT IN ('21','22','23','32')
      AND
      ( ( SUBSTRING([業種コード],1,3) <> '140' AND
          [商品コード１] NOT IN ('01','02','03','04','05') )
        OR
        ( SUBSTRING([業種コード],1,3) =  '140' AND
          [付保証コード]  IN ('08','09') )
      )
    )
    OR
    ( ( [科目]='11' AND [法個人コード] NOT IN ('21','22','23','32') AND
        SUBSTRING([業種コード],1,3)<>'140')
      OR
      ( [科目]='12' AND [法個人コード] NOT IN ('21','22','23','32') AND
        SUBSTRING([カードローンコード],1,4)='1005')
    )
    OR
    ( [科目] IN ('1300','1309','1310','1319') )
) AS A
GROUP BY A.[店番],A.[ＣＩＦ番号];
SELECT @ErrorCode = @@ERROR;
IF @ErrorCode <> 0 GOTO ENDPT;
/* ######################################################################### */
/*                               通常の退出処理                              */
/* ######################################################################### */
SELECT GETDATE() AS [DATE];
SET @ExitCode = 0;
GOTO Final;
/* ######################################################################### */
/*                           エラー発生時の退出処理                          */
/* ######################################################################### */
ENDPT:
SELECT GETDATE() AS [DATE];
SET @ExitCode = 8;
GOTO Final;
/* ######################################################################### */
/*                    処理を終了し、終了コードを返却する                       */
/* ######################################################################### */
Final:
:EXIT(SELECT @ExitCode)
"


#
exit $?
