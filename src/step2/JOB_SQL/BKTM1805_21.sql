#!/bin/sh
. "/home/ec2-user/kyo/logger.sh"

# スクリプト自身のパスを取得（bashでも.でも動く）
script_path="$(realpath "${BASH_SOURCE[0]:-${0}}")"

log_exec "$script_path" "$@"

# =========================================================================
# 作成テーブル名称  :ＣＩＦ動態情報縦持ち（SCOPE）  | T_KT18050D_OBJ
#                      クレジットの件数、金額をその他クレジットに集約する
# フェーズ          :テーブル作成
# サイクル          :月次
# 参照テーブル      :ＣＩＦ動態情報縦持ちワーク（SCOPE）  | T_KT18050D_WK1
#
# 変更履歴
# -------------------------------------------------------------------------
# 2024-11-07        :新規作成                       | K.Setoguchi
# =========================================================================
#
#  ＳＱＬ実行
#

sqlcmd -S ${SQL_SERVER} -d ${SQL_DB} -U ${SQL_USER} -P ${SQL_PASS} -f ${CHARSET} -t 0 -e -b -N o -Q "
DECLARE @ExitCode INT;
DECLARE @ErrorCode INT;
SET @ExitCode = 0;
SELECT GETDATE() AS [DATE];
SELECT @ErrorCode = @@ERROR;
IF @ErrorCode <> 0 GOTO ENDPT;
INSERT INTO ${INFO_DB}.T_KT18050M_OBJ
SELECT
    A.[作成基準日]          AS [作成基準日],
    A.[項目コード]          AS [項目コード],
    A.[店番]                AS [店番],
    A.[ＣＩＦ番号]          AS [ＣＩＦ番号],
    A.[件数]                AS [件数],
    A.[金額]                AS [金額]
FROM
    (
      SELECT
          [作成基準日]      AS [作成基準日],
         '4009'            AS [項目コード],
         [店番]            AS [店番],
         [ＣＩＦ番号]      AS [ＣＩＦ番号],
         SUM([件数])       AS [件数],
         SUM([金額])       AS [金額]
      FROM ${INFO_DB}.T_KT18050M_WK1
        WHERE [項目コード] IN ('4001','4003','4005','4007','4009')  /*クレジット件数*/
      GROUP BY [作成基準日],[店番],[ＣＩＦ番号]
    UNION ALL
      SELECT
          [作成基準日]      AS [作成基準日],
         '4010'            AS [項目コード],
         [店番]            AS [店番],
         [ＣＩＦ番号]      AS [ＣＩＦ番号],
         SUM([件数])       AS [件数],
         SUM([金額])       AS [金額]
      FROM ${INFO_DB}.T_KT18050M_WK1
        WHERE [項目コード] IN ('4002','4004','4006','4008','4010')  /*クレジット金額*/
      GROUP BY [作成基準日],[店番],[ＣＩＦ番号]
    ) AS A;
SELECT @ErrorCode = @@ERROR;
IF @ErrorCode <> 0 GOTO ENDPT;
/* ######################################################################### */
/*                               通常の退出処理                              */
/* ######################################################################### */
SELECT GETDATE() AS [DATE];
SET @ExitCode = 0;
GOTO Final;
/* ######################################################################### */
/*                           エラー発生時の退出処理                          */
/* ######################################################################### */
ENDPT:
SELECT GETDATE() AS [DATE];
SET @ExitCode = 8;
GOTO Final;
/* ######################################################################### */
/*                    処理を終了し、終了コードを返却する                       */
/* ######################################################################### */
Final:
:EXIT(SELECT @ExitCode)
"


#
exit $?
