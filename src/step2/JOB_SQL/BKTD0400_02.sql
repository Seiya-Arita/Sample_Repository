#!/bin/sh
. "/home/ec2-user/kyo/logger.sh"

# スクリプト自身のパスを取得（bashでも.でも動く）
script_path="$(realpath "${BASH_SOURCE[0]:-${0}}")"

log_exec "$script_path" "$@"

# ==============================================================================
# 作成テーブル名称  :電話番号通話可否マスタ                    | T_KT43050D_OBJ
# フェーズ          :最新番号通話可否_過去情報セット
# サイクル          :日次
# 参照テーブル      :最新通話可否情報（ワークテーブル）        | T_KT43050D_WK1
#                    電話番号通話可否マスタ(前日)              | T_KT43050D_001
# 変更履歴
# ------------------------------------------------------------------------------
# 2022-01-12        :新規作成                                  | eBP Kodama
# ===============================================================================
#
#  ＳＱＬ実行
#

sqlcmd -S ${SQL_SERVER} -d ${SQL_DB} -U ${SQL_USER} -P ${SQL_PASS} -f ${CHARSET} -t 0 -e -w 254 -b -N o -Q "
DECLARE @ExitCode INT;
DECLARE @ErrorCode INT;
SET @ExitCode = 0;
SELECT GETDATE() AS [DATE];
SELECT @ErrorCode = @@ERROR;
IF @ErrorCode <> 0 GOTO ENDPT;
/* ****************************************************************** */
/* 電話番号通話可否マスタ 作成① */
/* ****************************************************************** */
INSERT INTO ${INFO_DB}.[T_KT43050D_OBJ]
SELECT
     T1.[作成基準日]               AS [作成基準日],
     T1.[統合ＣＩＦ番号]           AS [統合ＣＩＦ番号],
     T1.[電話番号]                 AS [電話番号],
     CASE
         WHEN T1.[通話実績有無] = '1' OR T2.[通話実績有無] = '1' THEN '1'
         ELSE '' END                 AS [通話実績有無],
     CASE
         WHEN T2.[最終通話日] IS NULL THEN T1.[最終通話日]
         ELSE
             CASE
                 WHEN T1.[最終通話日] >= T2.[最終通話日] THEN T1.[最終通話日]
                 ELSE T2.[最終通話日]
             END
     END AS [最終通話日],
     T1.[生死フラグ],
     T1.[更新日]                   AS [更新日]
FROM ${INFO_DB}.[T_KT43050D_WK1]   AS T1
LEFT JOIN
    ${INFO_DB}.[T_KT43050D_001]    AS T2
ON  T1.[統合ＣＩＦ番号] = T2.[統合ＣＩＦ番号]
AND T1.[電話番号]       = T2.[電話番号];
SELECT @ErrorCode = @@ERROR;
IF @ErrorCode <> 0 GOTO ENDPT;
/* ######################################################################### */
/*                               通常の退出処理                              */
/* ######################################################################### */
SELECT GETDATE() AS [DATE];
SET @ExitCode = 0;
GOTO Final;
/* ######################################################################### */
/*                           エラー発生時の退出処理                          */
/* ######################################################################### */
ENDPT:
SELECT GETDATE() AS [DATE];
SET @ExitCode = 8;
GOTO Final;
/* ######################################################################### */
/*                    処理を終了し、終了コードを返却する                       */
/* ######################################################################### */
Final:
:EXIT(SELECT @ExitCode)
"


#
exit $?
