#!/bin/sh
. "/home/ec2-user/kyo/logger.sh"

# スクリプト自身のパスを取得（bashでも.でも動く）
script_path="$(realpath "${BASH_SOURCE[0]:-${0}}")"

log_exec "$script_path" "$@"

# ==============================================================================
# 作成テーブル名称  :顧客商品契約有無＿全階層                | HN_INFO.T_SN30200D_OBJ
# フェーズ          :各階層情報マージ
# サイクル          :日次
# 参照テーブル      :顧客商品契約有無＿階層４                | HN_INFO.T_SN30200D_WK1
#                   :顧客商品契約有無＿階層３                | HN_INFO.T_SN30200D_WK2
#                   :顧客商品契約有無＿階層２                | HN_INFO.T_SN30200D_WK3
#                   :日付テーブル                            | HN_INFO.T_KT00060D_LOAD
#
# 変更履歴
# ------------------------------------------------------------------------------
# 2023-09-19        :新規作成                                | Kodama
# ===============================================================================
#
#  ＳＱＬ実行
#

sqlcmd -S ${SQL_SERVER} -d ${SQL_DB} -U ${SQL_USER} -P ${SQL_PASS} -f ${CHARSET} -t 0 -e -w 254 -b -N o -Q "
DECLARE @ExitCode INT;
DECLARE @ErrorCode INT;
SET @ExitCode = 0;
SELECT GETDATE() AS [DATE];
SELECT @ErrorCode = @@ERROR;
IF @ErrorCode <> 0 GOTO ENDPT;
/* ****************************************************************** */
/* 業務支援系商品マスタで管理している全ての階層の取引有無情報を作成する */
/* このＳＱＬでは、各階層情報を１テーブルにマージする                */
/* ****************************************************************** */

/* 各階層情報マージ */
INSERT INTO ${INFO_DB}.[T_SN30200D_OBJ]
SELECT
   T2.[前日]
  ,T1.[店番]
  ,T1.[ＣＩＦ番号]
  ,T1.[統合ＣＩＦ番号]
  ,T1.[商品コード]
FROM
  ( /* 集約 (UNION) */
    SELECT [店番], [ＣＩＦ番号], [統合ＣＩＦ番号], [商品コード] FROM ${INFO_DB}.[T_SN30200D_WK1]
      UNION
    SELECT [店番], [ＣＩＦ番号], [統合ＣＩＦ番号], [商品コード] FROM ${INFO_DB}.[T_SN30200D_WK2]
      UNION
    SELECT [店番], [ＣＩＦ番号], [統合ＣＩＦ番号], [商品コード] FROM ${INFO_DB}.[T_SN30200D_WK3]
  ) AS T1
CROSS JOIN ${INFO_DB}.[T_KT00060D_LOAD] AS T2
GROUP BY T2.[前日], T1.[店番], T1.[ＣＩＦ番号], T1.[統合ＣＩＦ番号], T1.[商品コード];
SELECT @ErrorCode = @@ERROR;
IF @ErrorCode <> 0 GOTO ENDPT;

/* ######################################################################### */
/*                               通常の退出処理                              */
/* ######################################################################### */
SELECT GETDATE() AS [DATE];
SET @ExitCode = 0;
GOTO Final;

/* ######################################################################### */
/*                           エラー発生時の退出処理                          */
/* ######################################################################### */
ENDPT:
SELECT GETDATE() AS [DATE];
SET @ExitCode = 8;
GOTO Final;

/* ######################################################################### */
/*                    処理を終了し、終了コードを返却する                       */
/* ######################################################################### */
Final:
:EXIT(SELECT @ExitCode)
"


#
exit $?
